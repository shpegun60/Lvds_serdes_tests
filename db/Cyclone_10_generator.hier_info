|main
i_clk50MHz => i_clk50MHz.IN1
i_rstn => i_rstn.IN1
o_led[0] << serdes_logic:serdes_inst.o_aux
o_led[1] << serdes_logic:serdes_inst.o_aux
o_led[2] << serdes_logic:serdes_inst.o_aux
o_led[3] << serdes_logic:serdes_inst.o_aux
o_csn0 << <GND>
o_clk << <GND>
o_clkn << <GND>
io_dq[0] <> <UNC>
io_dq[1] <> <UNC>
io_dq[2] <> <UNC>
io_dq[3] <> <UNC>
io_dq[4] <> <UNC>
io_dq[5] <> <UNC>
io_dq[6] <> <UNC>
io_dq[7] <> <UNC>
io_rwds <> <UNC>
o_resetn << <GND>
o_csn1 << <GND>
o_tx[0] << <GND>
o_tx[1] << <GND>
i_rx[0] => ~NO_FANOUT~
i_rx[1] => ~NO_FANOUT~
i_clk_lvds => ~NO_FANOUT~
o_lvds_tx << serdes_logic:serdes_inst.o_lvds_tx
i_lvds_rx => i_lvds_rx.IN1


|main|serdes_logic:serdes_inst
i_clk_serdes => i_clk_serdes.IN2
i_rstn => test_error_counter[0].ACLR
i_rstn => test_error_counter[1].ACLR
i_rstn => test_error_counter[2].ACLR
i_rstn => test_error_counter[3].ACLR
i_rstn => test_error_counter[4].ACLR
i_rstn => test_error_counter[5].ACLR
i_rstn => test_error_counter[6].ACLR
i_rstn => test_error_counter[7].ACLR
i_rstn => test_error_counter[8].ACLR
i_rstn => test_error_counter[9].ACLR
i_rstn => test_error_counter[10].ACLR
i_rstn => test_error_counter[11].ACLR
i_rstn => test_error_counter[12].ACLR
i_rstn => test_error_counter[13].ACLR
i_rstn => test_error_counter[14].ACLR
i_rstn => test_error_counter[15].ACLR
i_rstn => tx_data_last4[0].ACLR
i_rstn => tx_data_last4[1].ACLR
i_rstn => tx_data_last4[2].ACLR
i_rstn => tx_data_last4[3].ACLR
i_rstn => tx_data_last4[4].ACLR
i_rstn => tx_data_last4[5].ACLR
i_rstn => tx_data_last4[6].ACLR
i_rstn => tx_data_last4[7].ACLR
i_rstn => tx_data_last4[8].ACLR
i_rstn => tx_data_last4[9].ACLR
i_rstn => tx_data_last3[0].ACLR
i_rstn => tx_data_last3[1].ACLR
i_rstn => tx_data_last3[2].ACLR
i_rstn => tx_data_last3[3].ACLR
i_rstn => tx_data_last3[4].ACLR
i_rstn => tx_data_last3[5].ACLR
i_rstn => tx_data_last3[6].ACLR
i_rstn => tx_data_last3[7].ACLR
i_rstn => tx_data_last3[8].ACLR
i_rstn => tx_data_last3[9].ACLR
i_rstn => tx_data_last2[0].ACLR
i_rstn => tx_data_last2[1].ACLR
i_rstn => tx_data_last2[2].ACLR
i_rstn => tx_data_last2[3].ACLR
i_rstn => tx_data_last2[4].ACLR
i_rstn => tx_data_last2[5].ACLR
i_rstn => tx_data_last2[6].ACLR
i_rstn => tx_data_last2[7].ACLR
i_rstn => tx_data_last2[8].ACLR
i_rstn => tx_data_last2[9].ACLR
i_rstn => tx_data_last1[0].ACLR
i_rstn => tx_data_last1[1].ACLR
i_rstn => tx_data_last1[2].ACLR
i_rstn => tx_data_last1[3].ACLR
i_rstn => tx_data_last1[4].ACLR
i_rstn => tx_data_last1[5].ACLR
i_rstn => tx_data_last1[6].ACLR
i_rstn => tx_data_last1[7].ACLR
i_rstn => tx_data_last1[8].ACLR
i_rstn => tx_data_last1[9].ACLR
i_rstn => tx_data[0].ACLR
i_rstn => tx_data[1].PRESET
i_rstn => tx_data[2].ACLR
i_rstn => tx_data[3].PRESET
i_rstn => tx_data[4].PRESET
i_rstn => tx_data[5].PRESET
i_rstn => tx_data[6].ACLR
i_rstn => tx_data[7].PRESET
i_rstn => tx_data[8].ACLR
i_rstn => tx_data[9].PRESET
i_rstn => succes_i.ACLR
i_rstn => r_error_counter[0].ACLR
i_rstn => r_error_counter[1].ACLR
i_rstn => r_error_counter[2].ACLR
i_rstn => r_error_counter[3].ACLR
i_rstn => r_error_counter[4].ACLR
i_rstn => r_error_counter[5].ACLR
i_rstn => r_wait_cnt[0].ACLR
i_rstn => r_wait_cnt[1].ACLR
i_rstn => r_wait_cnt[2].ACLR
i_rstn => rx_data_align.ACLR
i_rstn => lvds_tx_in[0].ACLR
i_rstn => lvds_tx_in[1].ACLR
i_rstn => lvds_tx_in[2].ACLR
i_rstn => lvds_tx_in[3].ACLR
i_rstn => lvds_tx_in[4].ACLR
i_rstn => lvds_tx_in[5].ACLR
i_rstn => lvds_tx_in[6].ACLR
i_rstn => lvds_tx_in[7].ACLR
i_rstn => lvds_tx_in[8].ACLR
i_rstn => lvds_tx_in[9].ACLR
i_rstn => tx_test_state~3.DATAIN
i_rstn => state~3.DATAIN
o_lvds_tx <= lvds_tx:lvds_tx_inst.tx_out
i_lvds_rx => i_lvds_rx.IN1
o_aux[0] <= test_error_counter[0].DB_MAX_OUTPUT_PORT_TYPE
o_aux[1] <= test_error_counter[1].DB_MAX_OUTPUT_PORT_TYPE
o_aux[2] <= test_error_counter[2].DB_MAX_OUTPUT_PORT_TYPE
o_aux[3] <= test_error_counter[3].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst
tx_in[0] => tx_in[0].IN1
tx_in[1] => tx_in[1].IN1
tx_in[2] => tx_in[2].IN1
tx_in[3] => tx_in[3].IN1
tx_in[4] => tx_in[4].IN1
tx_in[5] => tx_in[5].IN1
tx_in[6] => tx_in[6].IN1
tx_in[7] => tx_in[7].IN1
tx_in[8] => tx_in[8].IN1
tx_in[9] => tx_in[9].IN1
tx_inclock => tx_inclock.IN1
tx_coreclock <= altlvds_tx:ALTLVDS_TX_component.tx_coreclock
tx_out[0] <= altlvds_tx:ALTLVDS_TX_component.tx_out


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component
tx_in[0] => lvds_tx_lvds_tx1:auto_generated.tx_in[0]
tx_in[1] => lvds_tx_lvds_tx1:auto_generated.tx_in[1]
tx_in[2] => lvds_tx_lvds_tx1:auto_generated.tx_in[2]
tx_in[3] => lvds_tx_lvds_tx1:auto_generated.tx_in[3]
tx_in[4] => lvds_tx_lvds_tx1:auto_generated.tx_in[4]
tx_in[5] => lvds_tx_lvds_tx1:auto_generated.tx_in[5]
tx_in[6] => lvds_tx_lvds_tx1:auto_generated.tx_in[6]
tx_in[7] => lvds_tx_lvds_tx1:auto_generated.tx_in[7]
tx_in[8] => lvds_tx_lvds_tx1:auto_generated.tx_in[8]
tx_in[9] => lvds_tx_lvds_tx1:auto_generated.tx_in[9]
tx_inclock => lvds_tx_lvds_tx1:auto_generated.tx_inclock
tx_syncclock => ~NO_FANOUT~
tx_enable => ~NO_FANOUT~
sync_inclock => ~NO_FANOUT~
tx_pll_enable => ~NO_FANOUT~
pll_areset => ~NO_FANOUT~
tx_data_reset => ~NO_FANOUT~
tx_out[0] <= lvds_tx_lvds_tx1:auto_generated.tx_out[0]
tx_outclock <= <GND>
tx_coreclock <= lvds_tx_lvds_tx1:auto_generated.tx_coreclock
tx_locked <= <GND>


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated
tx_coreclock <= lvds_tx_pll.CLK1
tx_in[0] => tx_in_wire[0].IN1
tx_in[1] => tx_in_wire[1].IN1
tx_in[2] => tx_in_wire[2].IN1
tx_in[3] => tx_in_wire[3].IN1
tx_in[4] => tx_in_wire[4].IN1
tx_in[5] => tx_in_wire[5].IN1
tx_in[6] => tx_in_wire[6].IN1
tx_in[7] => tx_in_wire[7].IN1
tx_in[8] => tx_in_wire[8].IN1
tx_in[9] => tx_in_wire[9].IN1
tx_inclock => lvds_tx_pll.CLK
tx_out[0] <= lvds_tx_lvds_tx1_lvds_tx_ddio_out:ddio_out.dataout


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_ddio_out:ddio_out
datain_h[0] => ddio_outa_0.DATAINHI
datain_l[0] => ddio_outa_0.DATAINLO
dataout[0] <= ddio_outa_0.DATAOUT
outclock => ddio_outa_0.CLKHI
outclock => ddio_outa_0.CLKLO
outclock => ddio_outa_0.MUXSEL


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_cmpr:cmpr10
aeb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire.IN0
dataa[1] => data_wire.IN0
dataa[2] => data_wire[1].IN0
datab[0] => data_wire.IN1
datab[1] => data_wire.IN1
datab[2] => data_wire[1].IN1


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_cmpr:cmpr9
aeb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire.IN0
dataa[1] => data_wire.IN0
dataa[2] => data_wire[1].IN0
datab[0] => data_wire.IN1
datab[1] => data_wire.IN1
datab[2] => data_wire[1].IN1


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_cntr:cntr2
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
updown => cout_actual.IN1
updown => counter_comb_bita_0.DATAB
updown => counter_comb_bita_1.DATAB
updown => counter_comb_bita_2.DATAB
updown => wire_counter_reg_bit_asdata.IN0
updown => wire_counter_reg_bit_asdata.IN0
updown => wire_counter_reg_bit_asdata.IN0


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_cntr:cntr2|lvds_tx_lvds_tx1_lvds_tx_cmpr1:cmpr14
aeb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire.IN0
dataa[1] => data_wire.IN0
dataa[2] => data_wire[1].IN0
datab[0] => data_wire.IN1
datab[1] => data_wire.IN1
datab[2] => data_wire[1].IN1


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_shift_reg:shift_reg12
clock => shift_reg[0].CLK
clock => shift_reg[1].CLK
clock => shift_reg[2].CLK
clock => shift_reg[3].CLK
clock => shift_reg[4].CLK
data[0] => shift_reg.DATAB
data[1] => shift_reg.DATAB
data[2] => shift_reg.DATAB
data[3] => shift_reg.DATAB
data[4] => shift_reg.DATAB
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
shiftin => shift_reg.DATAA
shiftout <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_tx:lvds_tx_inst|altlvds_tx:ALTLVDS_TX_component|lvds_tx_lvds_tx1:auto_generated|lvds_tx_lvds_tx1_lvds_tx_shift_reg:shift_reg13
clock => shift_reg[0].CLK
clock => shift_reg[1].CLK
clock => shift_reg[2].CLK
clock => shift_reg[3].CLK
clock => shift_reg[4].CLK
data[0] => shift_reg.DATAB
data[1] => shift_reg.DATAB
data[2] => shift_reg.DATAB
data[3] => shift_reg.DATAB
data[4] => shift_reg.DATAB
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
load => shift_reg.OUTPUTSELECT
shiftin => shift_reg.DATAA
shiftout <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst
rx_data_align => rx_data_align.IN1
rx_in[0] => rx_in[0].IN1
rx_inclock => rx_inclock.IN1
rx_out[0] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[1] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[2] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[3] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[4] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[5] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[6] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[7] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[8] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_out[9] <= altlvds_rx:ALTLVDS_RX_component.rx_out
rx_outclock <= altlvds_rx:ALTLVDS_RX_component.rx_outclock


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component
rx_in[0] => lvds_rx_lvds_rx1:auto_generated.rx_in[0]
rx_inclock => lvds_rx_lvds_rx1:auto_generated.rx_inclock
rx_syncclock => ~NO_FANOUT~
rx_dpaclock => ~NO_FANOUT~
rx_readclock => ~NO_FANOUT~
rx_enable => ~NO_FANOUT~
rx_deskew => ~NO_FANOUT~
rx_pll_enable => ~NO_FANOUT~
rx_data_align => lvds_rx_lvds_rx1:auto_generated.rx_data_align
rx_data_align_reset => ~NO_FANOUT~
rx_reset[0] => ~NO_FANOUT~
rx_dpll_reset[0] => ~NO_FANOUT~
rx_dpll_hold[0] => ~NO_FANOUT~
rx_dpll_enable[0] => ~NO_FANOUT~
rx_fifo_reset[0] => ~NO_FANOUT~
rx_channel_data_align[0] => ~NO_FANOUT~
rx_cda_reset[0] => ~NO_FANOUT~
rx_coreclk[0] => ~NO_FANOUT~
pll_areset => ~NO_FANOUT~
rx_data_reset => ~NO_FANOUT~
pll_phasedone => ~NO_FANOUT~
rx_dpa_lock_reset[0] => ~NO_FANOUT~
dpa_pll_recal => ~NO_FANOUT~
rx_out[0] <= lvds_rx_lvds_rx1:auto_generated.rx_out[0]
rx_out[1] <= lvds_rx_lvds_rx1:auto_generated.rx_out[1]
rx_out[2] <= lvds_rx_lvds_rx1:auto_generated.rx_out[2]
rx_out[3] <= lvds_rx_lvds_rx1:auto_generated.rx_out[3]
rx_out[4] <= lvds_rx_lvds_rx1:auto_generated.rx_out[4]
rx_out[5] <= lvds_rx_lvds_rx1:auto_generated.rx_out[5]
rx_out[6] <= lvds_rx_lvds_rx1:auto_generated.rx_out[6]
rx_out[7] <= lvds_rx_lvds_rx1:auto_generated.rx_out[7]
rx_out[8] <= lvds_rx_lvds_rx1:auto_generated.rx_out[8]
rx_out[9] <= lvds_rx_lvds_rx1:auto_generated.rx_out[9]
rx_outclock <= lvds_rx_lvds_rx1:auto_generated.rx_outclock
rx_locked <= <GND>
rx_dpa_locked[0] <= <GND>
rx_cda_max[0] <= <GND>
rx_divfwdclk[0] <= <GND>
dpa_pll_cal_busy <= <GND>
pll_phaseupdown <= <GND>
pll_phasestep <= <GND>
pll_phasecounterselect[0] <= <GND>
pll_phasecounterselect[1] <= <GND>
pll_phasecounterselect[2] <= <GND>
pll_phasecounterselect[3] <= <GND>
pll_scanclk <= <GND>


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated
rx_data_align => rx_data_align_reg.DATAIN
rx_in[0] => rx_in[0].IN1
rx_inclock => lvds_rx_pll.CLK
rx_out[0] <= rx_reg[0].DB_MAX_OUTPUT_PORT_TYPE
rx_out[1] <= rx_reg[1].DB_MAX_OUTPUT_PORT_TYPE
rx_out[2] <= rx_reg[2].DB_MAX_OUTPUT_PORT_TYPE
rx_out[3] <= rx_reg[3].DB_MAX_OUTPUT_PORT_TYPE
rx_out[4] <= rx_reg[4].DB_MAX_OUTPUT_PORT_TYPE
rx_out[5] <= rx_reg[5].DB_MAX_OUTPUT_PORT_TYPE
rx_out[6] <= rx_reg[6].DB_MAX_OUTPUT_PORT_TYPE
rx_out[7] <= rx_reg[7].DB_MAX_OUTPUT_PORT_TYPE
rx_out[8] <= rx_reg[8].DB_MAX_OUTPUT_PORT_TYPE
rx_out[9] <= rx_reg[9].DB_MAX_OUTPUT_PORT_TYPE
rx_outclock <= lvds_rx_pll.CLK1


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_lvds_ddio_in:ddio_in
clock => ddio_h_reg[0].CLK
clock => dataout_l_reg[0].CLK
clock => dataout_h_reg[0].CLK
clock => ddio_l_reg[0].CLK
clock => dataout_l_latch[0].CLK
datain[0] => ddio_l_reg[0].DATAIN
datain[0] => ddio_h_reg[0].DATAIN
dataout_h[0] <= dataout_l_reg[0].DB_MAX_OUTPUT_PORT_TYPE
dataout_l[0] <= dataout_h_reg[0].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_dffpipe:h_dffpipe
clock => dffe8a[0].CLK
clock => dffe7a[0].CLK
d[0] => dffe7a[0].DATAIN
q[0] <= dffe8a[0].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_dffpipe:l_dffpipe
clock => dffe8a[0].CLK
clock => dffe7a[0].CLK
d[0] => dffe7a[0].DATAIN
q[0] <= dffe8a[0].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_cntr:bitslip_cntr
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => counter_reg_bit.OUTPUTSELECT
cnt_en => counter_reg_bit.OUTPUTSELECT
cnt_en => counter_reg_bit.OUTPUTSELECT
cnt_en => counter_reg_bit.OUTPUTSELECT
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_cntr:bitslip_cntr|lvds_rx_lvds_rx1_lvds_rx_cmpr:cmpr9
aeb <= aneb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire.IN0
dataa[1] => data_wire.IN0
dataa[2] => data_wire.IN0
dataa[3] => data_wire.IN0
datab[0] => data_wire.IN1
datab[1] => data_wire.IN1
datab[2] => data_wire.IN1
datab[3] => data_wire.IN1


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_mux:h_mux5a
data[0] => w_mux_outputs188w.IN0
data[1] => w_mux_outputs188w.IN0
data[2] => w_mux_outputs188w.IN0
data[3] => w_mux_outputs188w.IN0
data[4] => w_mux_outputs188w.IN0
data[5] => w_mux_outputs188w.IN0
data[6] => w_mux_outputs188w.IN0
data[7] => w_mux_outputs188w.IN0
data[8] => w_mux_outputs188w.IN0
data[9] => w_mux_outputs188w.IN0
result[0] <= muxlut_result0w.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[2] => muxlut_result0w.IN1
sel[2] => muxlut_result0w.IN1
sel[2] => muxlut_result0w.IN1
sel[3] => muxlut_result0w.IN1
sel[3] => muxlut_result0w.IN1


|main|serdes_logic:serdes_inst|lvds_rx:lvds_rx_inst|altlvds_rx:ALTLVDS_RX_component|lvds_rx_lvds_rx1:auto_generated|lvds_rx_lvds_rx1_lvds_rx_mux:l_mux6a
data[0] => w_mux_outputs188w.IN0
data[1] => w_mux_outputs188w.IN0
data[2] => w_mux_outputs188w.IN0
data[3] => w_mux_outputs188w.IN0
data[4] => w_mux_outputs188w.IN0
data[5] => w_mux_outputs188w.IN0
data[6] => w_mux_outputs188w.IN0
data[7] => w_mux_outputs188w.IN0
data[8] => w_mux_outputs188w.IN0
data[9] => w_mux_outputs188w.IN0
result[0] <= muxlut_result0w.DB_MAX_OUTPUT_PORT_TYPE
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[0] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[1] => w_mux_outputs188w.IN1
sel[2] => muxlut_result0w.IN1
sel[2] => muxlut_result0w.IN1
sel[2] => muxlut_result0w.IN1
sel[3] => muxlut_result0w.IN1
sel[3] => muxlut_result0w.IN1


